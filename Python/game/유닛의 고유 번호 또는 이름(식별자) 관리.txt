유닛의 고유 번호 또는 이름(식별자) 관리(ok)

각 유닛을 구분할 수 있도록 번호나 별칭을 자동으로 부여하면
출력이나 관리가 더 편리해집니다.

유닛 매니저 클래스 도입(doing)

유닛 생성, 관리, 삭제, 검색 등을 담당하는 클래스를 만들어
코드 구조를 더 체계적으로 만들 수 있습니다.
유닛 상태(예: 생존 여부, 위치 등) 관리

유닛이 파괴되면 리스트에서 제거하거나,
상태를 표시하는 기능이 있으면 실제 게임에 더 가깝습니다.
입력/출력 포맷 개선

예를 들어, 스팀팩 사용 시 "1번째 마린", "2번째 마린"처럼
순서를 출력하면 가독성이 좋아집니다.
유닛 생성/행동을 함수로 분리

반복되는 코드를 함수로 분리하면 유지보수와 확장성이 좋아집니다.
에러 처리 및 예외 상황 대응

체력이 0 이하인 유닛은 행동하지 못하게 하거나
잘못된 입력에 대한 예외 처리가 있으면 더 안전한 코드가 됩니다.
게임 진행 단계별 안내 메시지

각 단계(이동, 공격, 피해 등)마다 안내 메시지를 추가하면
게임 흐름을 더 쉽게 파악할 수 있습니다.